docker images
docker pull mongo
docker run mongo -d ---- -d is for detached mode

docker ps -- list running contaniers
docker ps -a --- list all containers- running/stopped etc
docker logs d0e510c6d44e
Stop Container:
	docker stop <d0e510c6d44e>
Remove Container:
	docker rm <d0e510c6d44e>
delete image
	docker rmi <image id>
	
Create network
	docker network create mongo-network
	docker network ls --- list networks
MongoDB:
	docker run -d -p 27017:27017 --name=mongo --network=mongo-network -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=password mongo
		--- -p port mapping, 1st is laptop port, 2nd is container port.
		--- network is required so that mongodb abd express containers can talk to each other directly.
Mongo Express:
	docker run --network=mongo-network -e ME_CONFIG_MONGODB_SERVER=mongo -p 8081:8081 --name=mongo-express -e ME_CONFIG_MONGODB_ADMINUSERNAME=admin -e ME_CONFIG_MONGODB_ADMINPASSWORD=password -d mongo-express

Mongo Express URL - http://192.168.56.100:8081/
	IP is the IP taken when docker toolbox statred on Windows system.
docker-compose
	docker-compose -f mongo.yaml up
	-- It will create one network( docker_default) also automatically
	
	docker-compose -f mongo.yaml down
	
mongo.yaml:
	version: '3' 
	services: 
	 mongodb:
	  image: mongo
	  ports:
	   - 27017:27017
	  environment:
	   - MONGO_INITDB_ROOT_USERNAME=admin
	   - MONGO_INITDB_ROOT_PASSWORD=password
	 mongo-express:
	  image: mongo-express
      ports:
	   - 8081:8081
	  environment: 
       - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
       - ME_CONFIG_MONGODB_ADMINPASSWORD=password 
       - ME_CONFIG_MONGODB_SERVER=mongodb	   
	  
create image:
	docker build -t <image name my-app:1.0> <location of Dockerfile .>
	
To go to interactive terminal of container:
		docker exec -it <container id> /bin/bash
			OR
		docker exec -it <container id> /bin/sh
		

Dockerfile
	FROM openjdk:8-jdk-alpine

	ARG JAR_FILE=./mongodbJar.jar

	RUN mkdir -p /home/app

	COPY ${JAR_FILE} /home/app/app.jar

	CMD ["java","-jar","/home/app/app.jar"]

Image Namingin Docker Repository:
	registryDomain/imageName:tag
	
	For docker hub image registryDomain name not must (docker.io/library)
	For private repository its required

Docker Private Repository:
	AWS ECR(Amazon Elastic Container Registry)
	Create AWS Repository
		Give name same as image name.
		AWS ECR repository can't have multiple images. There must be one repository per image.
	Push my-app image to this repository
		Login to private repository	
			docker login 
				Selct reposiory in AWS and click on "view push command" link, it will show below command to login, select and run it.
				It needs AWS CLI and configure AWS CLI using https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html.
				
				aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 690666002218.dkr.ecr.us-east-2.amazonaws.com
			Build image if not done
			Tag the image
				docker tag my-app:1.0 690666002218.dkr.ecr.us-east-2.amazonaws.com/my-app:1.0
				It would change image name from my-app to 690666002218.dkr.ecr.us-east-2.amazonaws.com/my-app 
			Push image to docker repository
				docker push 690666002218.dkr.ecr.us-east-2.amazonaws.com/my-app:1.0

Docker Volumes
	- used for data persistence
	- used  for application using database or stateful applications
	- Folders in physical host file system is mounted into virtual file system of Docker.
	- Data hets automatically replicated.
	
	Types of Volumes:
		Host Volumes:
			You decide where on the host file system the reference is made.
			created using docker run command:
				-v <host dirctory>:<container dir>
		Anonymous Volumes:
			for each container a directory is created by Docker and mounted.
			-v <container dir>
		Named Volume:
			Specify the name of dir to be created on host so volume can be referenced by name.
			-v name:<container dir>
		
	Two containers can refer same host volume if they want to share the data.

	Default volume path on mongo container - /data/db
	drkatefranklyon@gmail.com
Docker Volumes location:
	Depends on OS type.
	
	